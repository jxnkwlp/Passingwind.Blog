# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release' 

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

# check npm
- task: UseNode@1
  inputs:
    checkLatest: true

# npm install vue-cli
# - script: npm install -g @vue/cli
#   displayName: 'Install vue-cli'
#   workingDirectory: 'Passingwind.Blog.Web/ClientApp'  
  
# - task: Npm@1 
#   inputs:
#     command: 'custom'
#     customCommand: install -g @vue/cli
#     workingDir: 'Passingwind.Blog.Web/ClientApp'  

# npm install 
# - task: Npm@1
#   displayName: 'Install npm packages'
#   inputs:
#     command: 'install'
#     workingDir: 'Passingwind.Blog.Web/ClientApp'  

# - task: Npm@1 
#   inputs:
#     command: 'custom'
#     customCommand: run build
#     workingDir: 'Passingwind.Blog.Web/ClientApp'  

# - script: npm run build
#   displayName: 'Install vue-cli'
#   workingDirectory: 'Passingwind.Blog.Web/ClientApp'  


- task: DotNetCoreCLI@2
  displayName: 'Dotnet build widgets'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'Widgets/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    zipAfterPublish: false
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  displayName: 'Dotnet publish web project'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) ' 
    zipAfterPublish: true
    
# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1 
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    ArtifactName: 'drop'


# github release / tag
- task: GitHubRelease@1
  displayName: 'GitHub release'
  inputs:
    gitHubConnection: 'github.com_jxnkwlp'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'v$(Build.BuildNumber)'
    title: 'v$(Build.BuildNumber)'
    isDraft: false
    isPreRelease: true
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
