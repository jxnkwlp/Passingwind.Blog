<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <UserSecretsId>Passingwind.Blog-90BAEF06-E994-43CB-9215-50530F89ECD0</UserSecretsId>
        <CopyRefAssembliesToPublishDirectory>false</CopyRefAssembliesToPublishDirectory>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <EmbeddedResource Remove="$(SpaRoot)**" />
    </ItemGroup>

	<ItemGroup>
		<Content Include="Themes\*\wwwroot\**">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.1.8" />
        <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.4" />
        <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="3.1.9" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.9" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.1.8" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.8" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="3.1.8" />

        <PackageReference Include="Pomelo.EntityFrameworkCore.MySql" Version="3.2.3" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.9" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.8" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.4" />

        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.8">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.8" />

        <PackageReference Include="MailKit" Version="2.9.0" />
        <PackageReference Include="MaxMind.GeoIP2" Version="3.3.0" />

        <PackageReference Include="Scrutor" Version="3.2.2" />
        <PackageReference Include="NLog.Web.AspNetCore" Version="4.9.3" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="5.6.3" />
        <PackageReference Include="VueCliMiddleware" Version="3.1.1" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.0.1" />
        <PackageReference Include="MiniProfiler.AspNetCore.Mvc" Version="4.2.1" />
        <PackageReference Include="MiniProfiler.EntityFrameworkCore" Version="4.2.1" />

        <PackageReference Include="EasyCaching.InMemory" Version="0.9.0" />
        <PackageReference Include="EasyCaching.Redis" Version="0.9.0" />

        <PackageReference Include="Microsoft.AspNetCore.Authentication.AzureAD.UI" Version="3.1.8" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="3.1.8" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.9" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" Version="3.1.9" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="3.1.8" />
        <PackageReference Include="AspNet.Security.OAuth.GitHub" Version="3.1.4" />
        <!--<PackageReference Include="Passingwind.AspNetCore.Authentication.QQ" Version="3.1.0" />
        <PackageReference Include="Passingwind.AspNetCore.Authentication.Weixin" Version="3.1.0" />-->
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Passingwind.Blog.Core\Passingwind.Blog.Core.csproj" />
        <ProjectReference Include="..\Passingwind.Blog.EntityFramework.MySql\Passingwind.Blog.EntityFramework.MySql.csproj" />
        <ProjectReference Include="..\Passingwind.Blog.EntityFramework.PostgreSQL\Passingwind.Blog.EntityFramework.PostgreSQL.csproj" />
        <ProjectReference Include="..\Passingwind.Blog.EntityFramework.Sqlite\Passingwind.Blog.EntityFramework.Sqlite.csproj" />
        <ProjectReference Include="..\Passingwind.Blog.EntityFramework.SqlServer\Passingwind.Blog.EntityFramework.SqlServer.csproj" />
        <ProjectReference Include="..\Passingwind.Blog.Web.Core\Passingwind.Blog.Web.Core.csproj" />
        <ProjectReference Include="..\Passingwind.Blog.Widgets\Passingwind.Blog.Widgets.csproj" />
    </ItemGroup>

    <ItemGroup>
        <Content Update="NLog.config">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>


	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Release' ">
		<Message Importance="high" Text="Check node version ..." />
		<!-- Build Target:  Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
	</Target>

	<Target Name="EnsureNodeModulesInstalled" BeforeTargets="Build" Inputs="package.json" Outputs="packages-lock.json" Condition=" '$(Configuration)' == 'Release' ">
		<!-- Build Target: Restore NPM packages using npm -->
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />

		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- Build Target: Run webpack dist build -->
		<Message Importance="high" Text="Running npm build..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<Target Name="CopyWidgets" AfterTargets="ComputeFilesToPublish">
		<ItemGroup>
			<DistFiles Include="widgets\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
